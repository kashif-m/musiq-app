commit 854f66f49dd575d883cf8c00c293142f0c3beb69
Author: Kashif <kashif.dev@protonmail.com>
Date:   Sat Oct 26 11:32:02 2019 +0530

    +spotify-web-playback +music-providers

diff --git a/src/app-content/main-content/screens/Search.jsx b/src/app-content/main-content/screens/Search.jsx
index 60a1391..d458253 100644
--- a/src/app-content/main-content/screens/Search.jsx
+++ b/src/app-content/main-content/screens/Search.jsx
@@ -3,7 +3,8 @@ import React, {useState, useEffect} from 'react'
 import axios from 'axios'
 
 export default props => {
-
+  
+  const {user} = props
   const [searchParams, setSearchParams] = useState({
     type: ['album', 'track', 'artist'],
     limit: 5
@@ -15,8 +16,12 @@ export default props => {
 
   const querySearch = () => {
 
-    const {token} = props
-    const access_token = 'Bearer ' + token.access_token
+    console.log(user)
+    if(!user)
+      return
+
+    const {spotify} = user
+    const access_token = 'Bearer ' + spotify.access_token
     console.log(access_token)
     const {limit, type} = searchParams
     const query = encodeURI(seachQuery.value)
@@ -78,7 +83,6 @@ export default props => {
       <div className="artists">
         <div className="heading">Artists</div>
         {
-
           items.map(item => {
             const {images, name, id} = item
             return (

commit 643887ba85016510519b53618b574669aec5f500
Author: Kashif <kashif.dev@protonmail.com>
Date:   Thu Oct 24 23:37:37 2019 +0530

    -client_credentials, +authorization_code in spotify

diff --git a/src/app-content/main-content/screens/Search.jsx b/src/app-content/main-content/screens/Search.jsx
index 9ca95f9..60a1391 100644
--- a/src/app-content/main-content/screens/Search.jsx
+++ b/src/app-content/main-content/screens/Search.jsx
@@ -17,11 +17,13 @@ export default props => {
 
     const {token} = props
     const access_token = 'Bearer ' + token.access_token
+    console.log(access_token)
     const {limit, type} = searchParams
     const query = encodeURI(seachQuery.value)
     axios.get(`https://api.spotify.com/v1/search?q=${query}&type=${type.join(',')}&limit=${limit}`,
       { headers: { Authorization: access_token } })
       .then(res => {
+        console.log(res.data)
         Object.keys(res.data).length > 0
         ? setSearchResults(res.data)
         : setSearchResults(false)

commit 205784c844f6cb61713703fa2b645849ebee59e3
Author: Kashif <kashif.dev@protonmail.com>
Date:   Mon Oct 21 22:04:09 2019 +0530

    +playing now integration

diff --git a/src/app-content/main-content/screens/Search.jsx b/src/app-content/main-content/screens/Search.jsx
index 59abc06..9ca95f9 100644
--- a/src/app-content/main-content/screens/Search.jsx
+++ b/src/app-content/main-content/screens/Search.jsx
@@ -2,38 +2,39 @@
 import React, {useState, useEffect} from 'react'
 import axios from 'axios'
 
-const youtubeAPI = require('../../../config/keys').youtubeAPI
-const spotifyToken = require('../../../config/keys').spotifyToken
-
-export default () => {
+export default props => {
 
   const [searchParams, setSearchParams] = useState({
     type: ['album', 'track', 'artist'],
     limit: 5
   })
-  const [searchResults, setSearchResults] = useState(false)
+  const [searchResults, setSearchResults] = props.searchResults
   let seachQuery = {}
 
-  useEffect(() => {
-
-    const items = localStorage.getItem('items')
-    setSearchResults(JSON.parse(items))
-  }, [])
+  const [playingNow, updatePlayingNow] = props.playingNow
 
   const querySearch = () => {
 
+    const {token} = props
+    const access_token = 'Bearer ' + token.access_token
     const {limit, type} = searchParams
     const query = encodeURI(seachQuery.value)
     axios.get(`https://api.spotify.com/v1/search?q=${query}&type=${type.join(',')}&limit=${limit}`,
-      { headers: { Authorization: spotifyToken } })
-      .then(res => setSearchResults(res.data))
+      { headers: { Authorization: access_token } })
+      .then(res => {
+        Object.keys(res.data).length > 0
+        ? setSearchResults(res.data)
+        : setSearchResults(false)
+      })
       .catch(err => console.log(err.response))
   }
 
   const renderSearch = () => (
     <div className="search-box">
-      <input type="text" placeholder='Search for songs...'
+      <input type="text" placeholder='Search ...'
         ref={node => seachQuery = node}
+        defaultValue={searchResults ? 
+          new URL(searchResults[Object.keys(searchResults)[0]].href).searchParams.get('query') : null}
         onKeyPress={key => key.charCode === 13 ? querySearch() : null} />
       <img src={require('../../../assets/images/search.svg')} alt="search"
         onClick={() => querySearch()} />
@@ -51,11 +52,13 @@ export default () => {
           items.map(item => {
             const {artists, name, id, album} = item
             const {images} = album
-            console.log(images)
+            console.log(item)
             return (
               <div className="track" key={id} >
-                <img src={images.length > 0 ? images[2].url : null} alt="ti"/>
-                <div className="title">{name}</div>
+                <img src={images.length > 0 ? images[2].url : null} alt="ti"
+                  onClick={() => updatePlayingNow(item)} />
+                <div className="title"
+                  onClick={() => updatePlayingNow(item)} >{name}</div>
                 <div className="artist">{artists[0].name}</div>
               </div>
             )
@@ -118,16 +121,20 @@ export default () => {
 
     return (
       <div className="search-results">
-        {renderTracks(tracks)}
-        {renderAlbums(albums)}
-        {renderArtists(artists)}
+        {tracks.items.length > 0 && renderTracks(tracks)}
+        {albums.items.length > 0 && renderAlbums(albums)}
+        {artists.items.length > 0 && renderArtists(artists)}
       </div>
     )
   }
   
   return (
     <div className="search">
-      <div className="heading"> Search </div>
+      <div className="heading">
+        {
+          searchResults ? 'Search Results' : 'Search'
+        }
+      </div>
       {renderSearch()}
       {
         searchResults ?

commit 0a09765ce943c31b6666ba83666c6c29a4d09661
Author: Kashif <kashif.dev@protonmail.com>
Date:   Sun Oct 20 18:13:04 2019 +0530

    +spotify API integration

diff --git a/src/app-content/main-content/screens/Search.jsx b/src/app-content/main-content/screens/Search.jsx
new file mode 100644
index 0000000..59abc06
--- /dev/null
+++ b/src/app-content/main-content/screens/Search.jsx
@@ -0,0 +1,138 @@
+
+import React, {useState, useEffect} from 'react'
+import axios from 'axios'
+
+const youtubeAPI = require('../../../config/keys').youtubeAPI
+const spotifyToken = require('../../../config/keys').spotifyToken
+
+export default () => {
+
+  const [searchParams, setSearchParams] = useState({
+    type: ['album', 'track', 'artist'],
+    limit: 5
+  })
+  const [searchResults, setSearchResults] = useState(false)
+  let seachQuery = {}
+
+  useEffect(() => {
+
+    const items = localStorage.getItem('items')
+    setSearchResults(JSON.parse(items))
+  }, [])
+
+  const querySearch = () => {
+
+    const {limit, type} = searchParams
+    const query = encodeURI(seachQuery.value)
+    axios.get(`https://api.spotify.com/v1/search?q=${query}&type=${type.join(',')}&limit=${limit}`,
+      { headers: { Authorization: spotifyToken } })
+      .then(res => setSearchResults(res.data))
+      .catch(err => console.log(err.response))
+  }
+
+  const renderSearch = () => (
+    <div className="search-box">
+      <input type="text" placeholder='Search for songs...'
+        ref={node => seachQuery = node}
+        onKeyPress={key => key.charCode === 13 ? querySearch() : null} />
+      <img src={require('../../../assets/images/search.svg')} alt="search"
+        onClick={() => querySearch()} />
+    </div>
+  )
+
+  const renderTracks = tracks => {
+    
+    const {items} = tracks
+
+    return (
+      <div className="tracks">
+        <div className="heading">Tracks</div>
+        {
+          items.map(item => {
+            const {artists, name, id, album} = item
+            const {images} = album
+            console.log(images)
+            return (
+              <div className="track" key={id} >
+                <img src={images.length > 0 ? images[2].url : null} alt="ti"/>
+                <div className="title">{name}</div>
+                <div className="artist">{artists[0].name}</div>
+              </div>
+            )
+          })
+        }
+      </div>
+    )
+  }
+
+  const renderArtists = artists => {
+
+    const {items} = artists
+
+    return (
+      <div className="artists">
+        <div className="heading">Artists</div>
+        {
+
+          items.map(item => {
+            const {images, name, id} = item
+            return (
+              <div className="artist" key={id} >
+                <img src={images.length > 0 ? images[2].url : null} alt="ai"/>
+                <div className="title">{name}</div>
+              </div>
+            )
+          })
+        }
+      </div>
+    )
+  }
+
+  const renderAlbums = albums => {
+
+    const {items} = albums
+    
+    return (
+      <div className="albums">
+        <div className="heading">Albums</div>
+        {
+          items.map(item => {
+            const {name, id, artists, images} = item
+            return (
+              <div className="album" key={id} >
+                <img src={images.length > 0 ? images[2].url : null} alt="ali"/>
+                <div className="title">{name}</div>
+                <div className="artist">{artists[0].name}</div>
+              </div>
+            )
+          })
+        }
+      </div>
+    )
+  }
+
+  const renderSearchResults = () => {
+
+    let {albums, artists, tracks} = searchResults
+    localStorage.setItem('items', JSON.stringify(searchResults))
+
+    return (
+      <div className="search-results">
+        {renderTracks(tracks)}
+        {renderAlbums(albums)}
+        {renderArtists(artists)}
+      </div>
+    )
+  }
+  
+  return (
+    <div className="search">
+      <div className="heading"> Search </div>
+      {renderSearch()}
+      {
+        searchResults ?
+        renderSearchResults() : null
+      }
+    </div>
+  )
+}
